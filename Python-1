# implementation of card game - Memory

import simplegui
import random

click1=0
click2=0

state=0
# helper function to initialize globals
def new_game():
    global turns,state,deck,exposed 
    deck_1=range(1,8)
    deck_2=range(1,8)
    deck=deck_1+deck_2
    exposed=[]
    state=0
    turns=0
    for i in range(14):
        exposed.append(False)
    
    random.shuffle(deck) 
    label.set_text("Turns = " + str(turns))

# define event handlers
def mouseclick(pos):
    # add game state logic here
    global state, exposed, click1, click2, turns, deck
    card_choice=pos[0]//50
    if state == 0:
        state = 1
        click1=card_choice
        exposed[click1]=True
    elif state==1:
        if not exposed[card_choice]:
            state = 2
            click2=card_choice
            exposed[click2]=True
            turns +=1
    else:
        if not exposed[card_choice]:
            if deck[click1] == deck[click2]:
                pass
            else:
                exposed[click1] = False
                exposed[click2] = False
            click1 = card_choice
            exposed[click1] = True
            state = 1       
    label.set_text("Turns = " + str(turns))
    print state
    pass

# cards are logically 50x100 pixels in size    
def draw(canvas):
    for i in range(14): 
        if exposed[i]:
            canvas.draw_text(str(deck[i]), (50*i+10,60), 50, "WHITE")
        else:
            canvas.draw_polygon([[i*50, 0], [(i+1)*50, 0],[(i+1)*50, 100],[i*50, 100]], 
                    1, 'Black', 'Green') 

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 700, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


